{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yt436\\\\Documents\\\\Coding Classes\\\\Projects\\\\frontend\\\\src\\\\pages\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TimelineCard from '../components/TimelineCard';\nimport MoodGraph from '../components/MoodGraph';\nimport SummaryCard from '../components/SummaryCard';\nimport UploadForm from '../components/UploadForm';\nimport '../styles/main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const fetchMemories = async () => {\n    const res = await fetch('http://localhost:5000/api/memories');\n    const data = await res.json();\n    setEntries(data);\n  };\n  useEffect(() => {\n    fetchMemories();\n  }, []);\n  const addEntry = entry => {\n    setEntries([entry, ...entries]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Memory Lane\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      addEntry: addEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoodGraph, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SummaryCard, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline\",\n      children: entries.map((entry, index) => /*#__PURE__*/_jsxDEV(TimelineCard, {\n        entry: entry\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"si2ZVsazrWomTuBdDT2zYRo3CE0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimelineCard","MoodGraph","SummaryCard","UploadForm","jsxDEV","_jsxDEV","App","_s","entries","setEntries","fetchMemories","res","fetch","data","json","addEntry","entry","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["C:/Users/yt436/Documents/Coding Classes/Projects/frontend/src/pages/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimelineCard from '../components/TimelineCard';\nimport MoodGraph from '../components/MoodGraph';\nimport SummaryCard from '../components/SummaryCard';\nimport UploadForm from '../components/UploadForm';\nimport '../styles/main.css';\n\nfunction App() {\n  const [entries, setEntries] = useState([]);\n\n  const fetchMemories = async () => {\n    const res = await fetch('http://localhost:5000/api/memories');\n    const data = await res.json();\n    setEntries(data);\n  };\n\n  useEffect(() => { fetchMemories(); }, []);\n\n  const addEntry = (entry) => {\n    setEntries([entry, ...entries]);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Memory Lane</h1>\n      <UploadForm addEntry={addEntry} />\n      <MoodGraph entries={entries} />\n      <SummaryCard entries={entries} />\n      <div className=\"timeline\">\n        {entries.map((entry, index) => (\n          <TimelineCard key={index} entry={entry} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;IAC7D,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAC7BL,UAAU,CAACI,IAAI,CAAC;EAClB,CAAC;EAEDd,SAAS,CAAC,MAAM;IAAEW,aAAa,CAAC,CAAC;EAAE,CAAC,EAAE,EAAE,CAAC;EAEzC,MAAMK,QAAQ,GAAIC,KAAK,IAAK;IAC1BP,UAAU,CAAC,CAACO,KAAK,EAAE,GAAGR,OAAO,CAAC,CAAC;EACjC,CAAC;EAED,oBACEH,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjB,OAAA,CAACF,UAAU;MAACY,QAAQ,EAAEA;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClCjB,OAAA,CAACJ,SAAS;MAACO,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/BjB,OAAA,CAACH,WAAW;MAACM,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCjB,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBV,OAAO,CAACe,GAAG,CAAC,CAACP,KAAK,EAAEQ,KAAK,kBACxBnB,OAAA,CAACL,YAAY;QAAagB,KAAK,EAAEA;MAAM,GAApBQ,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CA5BQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}